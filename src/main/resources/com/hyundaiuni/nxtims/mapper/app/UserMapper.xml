<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyundaiuni.nxtims.mapper.app.UserMapper">
    <select id="getUserById" parameterType="string" resultType="com.hyundaiuni.nxtims.domain.app.User">
        <![CDATA[
            SELECT USER_ID AS userId,
                   USER_NM AS userNm,
                   USER_PWD AS userPwd,
                   DECODE(SIGN(TO_DATE(EXPIRED_YMD,'YYYYMMDD')-TRUNC(SYSDATE)),-1,'Y','N') AS expiredYn,
                   NVL(LOCKED_YN,'N') AS lockedYn,
                   DECODE(SIGN(TO_DATE(PWD_EXPIRED_YMD,'YYYYMMDD')-TRUNC(SYSDATE)),-1,'Y','N') AS pwdExpiredYn,
                   USE_YN AS useYn
              FROM USERS
             WHERE USER_ID = #{userId}
        ]]>
    </select>
    
    <select id="getAuthByUserId" parameterType="string" resultType="com.hyundaiuni.nxtims.domain.app.Auth">
        <![CDATA[
            SELECT AUTH_ID AS authId
              FROM USER_AUTH
             WHERE USER_ID = #{userId}
        ]]>
    </select>
    
    <select id="getMenuByUserId" parameterType="string" resultType="com.hyundaiuni.nxtims.domain.app.Resource">
        <![CDATA[
            SELECT LEVEL AS resourceLevel,
                   A.RESOURCE_ID AS resourceId,
                   A.RESOURCE_NM AS resourceNm,
                   A.RESOURCE_URL AS resourceUrl,
                   A.RESOURCE_TYPE AS resourceType,
                   A.LINK_RESOURCE_ID AS linkResourceId
              FROM ( SELECT D.RESOURCE_ID,
                            D.RESOURCE_NM,
                            D.RESOURCE_URL,
                            D.RESOURCE_TYPE,
                            D.LINK_RESOURCE_ID,
                            D.LINK_RESOURCE_SEQ
                       FROM USERS A,
                            USER_AUTH B,
                            AUTH_RESOURCE C,
                            RESOURCES D
                      WHERE A.USER_ID = #{userId}
                        AND A.USER_ID = B.USER_ID
                        AND B.AUTH_ID = C.AUTH_ID
                        AND C.RESOURCE_ID = D.RESOURCE_ID
                        AND D.RESOURCE_TYPE = '01'
                        AND D.USE_YN = 'Y' ) A
             START WITH A.RESOURCE_ID = '000000'    
           CONNECT BY A.LINK_RESOURCE_ID = PRIOR A.RESOURCE_ID
             ORDER SIBLINGS BY A.LINK_RESOURCE_SEQ
        ]]>
    </select>
    
    <update id="updateLoginSuccess" parameterType="string">
        <![CDATA[
            UPDATE USERS
               SET LAST_LOGIN_DATE = SYSDATE,
                   AUTH_FAIL_CNT = 0
             WHERE USER_ID = #{userId}
        ]]>
    </update>
    
    <update id="updateLoginDate" parameterType="hashmap">
        <![CDATA[
            MERGE INTO USER_ACCESS_LOG
            USING DUAL
               ON (USER_ID = #{userId} AND SESSION_ID = #{sessionId}) 
             WHEN MATCHED THEN
                  UPDATE
                     SET ACCESS_IP = #{accessIp},
                         LOGIN_DATE = SYSDATE
             WHEN NOT MATCHED THEN
                  INSERT
                  (
                   USER_ID,
                   SESSION_ID,
                   ACCESS_IP,
                   LOGIN_DATE
                  )
                  VALUES
                  (
                   #{userId},
                   #{sessionId},
                   #{accessIp},
                   SYSDATE
                  )
        ]]>
    </update>    
    
    <update id="updateAuthFailCnt" parameterType="string">
        <![CDATA[
            UPDATE USERS
               SET AUTH_FAIL_CNT = NVL(AUTH_FAIL_CNT,0) + 1
             WHERE USER_ID = #{userId}
        ]]>
    </update>
    
    <select id="getAuthFailCnt" parameterType="string" resultType="int">
        <![CDATA[
            SELECT AUTH_FAIL_CNT
              FROM USERS
             WHERE USER_ID = #{userId}
        ]]>
    </select>
    
    <update id="updateLockedYn" parameterType="hashmap">
        <![CDATA[
            UPDATE USERS
               SET LOCKED_YN = #{lockedYn}
             WHERE USER_ID = #{userId}
        ]]>
    </update>
    
    <update id="updateLogoutDate" parameterType="hashmap">
        <![CDATA[
            MERGE INTO USER_ACCESS_LOG
            USING DUAL
               ON (USER_ID = #{userId} AND SESSION_ID = #{sessionId}) 
             WHEN MATCHED THEN
                  UPDATE
                     SET LOGOUT_DATE = SYSDATE
             WHEN NOT MATCHED THEN
                  INSERT
                  (
                   USER_ID,
                   SESSION_ID,
                   LOGOUT_DATE
                  )
                  VALUES
                  (
                   #{userId},
                   #{sessionId},
                   SYSDATE
                  )
        ]]>
    </update>          
</mapper>